;; Consume operand stack a lot within a function, similarly
;; to ../wast/many_locals.wast.in.
;;
;; % m4 many_stack.wat.in | wat2wasm -o many_stack.wasm -
;; % toywasm --print-stats many_stack.wasm
;; === execution statistics ===
;; operand stack 16387 (65548 bytes)
;; locals 5 (20 bytes)
;; labels 0 (0 bytes)
;; frames 3 (96 bytes)
;;     :
;;     :
;;     :
;;
;; % m4 -D NUM1=4095 -D NUM2=1365 many_stack.wat.in | wat2wasm -o many_stack6.wasm -
;; % toywasm --print-stats many_stack6.wasm
;; === execution statistics ===
;; operand stack 4099 (16396 bytes)
;; locals 5 (20 bytes)
;; labels 0 (0 bytes)
;; frames 3 (96 bytes)
;;     :
;;     :
;;     :


define(`_repeat',`ifelse(eval($1<=$2),1,`$3`'$0(incr($1),$2,`$3')')')dnl
define(`repeat',`_repeat(1,$1,``$2'')')dnl

(module
  (func $add4 (export "add4") (param i32 i32 i32 i32) (result i32)
    local.get 0
    local.get 1
    local.get 2
    local.get 3
    i32.add
    i32.add
    i32.add
  )
  (func $func (export "func") (param $i i32) (result i32)
    local.get $i

    ;;; 4^7 - 1
    ;;; = 16383
ifdef(`NUM1',,`define(`NUM1',16383)')
repeat(NUM1,`
    (call $add4 (local.get $i (local.tee $i (i32.load))) (local.get $i (local.tee $i (i32.load))) (local.get $i (local.tee $i (i32.load))) (local.get $i (local.tee $i (i32.load))))')

    ;;; 4^6 + ... + 4^0
    ;;; = (4^(6+1)-1)/3
    ;;; = 5461
ifdef(`NUM2',,`define(`NUM2',5461)')
repeat(NUM2,`
    call $add4')
  )
  (func (export "_start")
    (call $func (i32.const 1))
    (i32.store (i32.const 0))
  )
  (memory (export "memory") 1)
)
